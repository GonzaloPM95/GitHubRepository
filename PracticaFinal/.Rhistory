# Add color scale (hex colors)
pie = pie + scale_fill_manual(values=c("#55DDE0", "#33658A"))
# Remove labels and add title
pie = pie + labs(x = NULL, y = NULL, fill = NULL, title = "Distribucion de la residencia de los turistas en dic 2020")
# Tidy up the theme
pie = pie + theme_classic() + theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, color = "#666666"))
pie
pernoctacionesDic2020 <- pernoctaciones %>% filter((Periodo == "2020-12-01" | Periodo == "2019-12-01" | Periodo == "2018-12-01") & Viajeros == 'Pernoctaciones'
& CCAA == "Total Nacional" & Operación == "Encuesta de Ocupación Hotelera" & Residencia != "Total ")
pie = ggplot(pernoctacionesDic2020, aes(x="", y=Total , fill=Residencia)) + geom_bar(stat="identity", width=1)
pie
# Convert to pie (polar coordinates) and add labels
pie = pie + coord_polar("y", start=0) + geom_text(aes(label = paste0(round(Total), " Euros")), position = position_stack(vjust = 0.5))
# Add color scale (hex colors)
pie = pie + scale_fill_manual(values=c("#55DDE0", "#33658A"))
# Remove labels and add title
pie = pie + labs(x = NULL, y = NULL, fill = NULL, title = "Distribucion de la residencia de los turistas en dic 2020")
# Tidy up the theme
pie = pie + theme_classic() + theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, color = "#666666"))
pie + facet_grid(. ~Periodo)
pie = ggplot(pernoctacionesDic2020, aes(x="", y=Total , fill=Residencia)) + geom_bar(stat="identity", width=1)
pie + facet_grid(. ~Periodo)
# Convert to pie (polar coordinates) and add labels
pie = pie + coord_polar("y", start=0) + geom_text(aes(label = paste0(round(Total), " Euros")), position = position_stack(vjust = 0.5))
# Add color scale (hex colors)
pie = pie + scale_fill_manual(values=c("#55DDE0", "#33658A"))
# Remove labels and add title
pie = pie + labs(x = NULL, y = NULL, fill = NULL, title = "Distribucion de la residencia de los turistas en dic 2020")
pernoctacionesDic2020 <- pernoctaciones %>% filter((Periodo == "2020-12-01") & Viajeros == 'Pernoctaciones'
& CCAA == "Total Nacional" & Operación == "Encuesta de Ocupación Hotelera" & Residencia != "Total ")
pernoctacionesDic2019 <- pernoctaciones %>% filter((Periodo == "2019-12-01") & Viajeros == 'Pernoctaciones'
& CCAA == "Total Nacional" & Operación == "Encuesta de Ocupación Hotelera" & Residencia != "Total ")
pie2020 = ggplot(pernoctacionesDic2020, aes(x="", y=Total , fill=Residencia)) + geom_bar(stat="identity", width=1)
pie2019 = ggplot(pernoctacionesDic2019, aes(x="", y=Total , fill=Residencia)) + geom_bar(stat="identity", width=1)
pie2020
# Convert to pie (polar coordinates) and add labels
pie2020 = pie2020 + coord_polar("y", start=0) + geom_text(aes(label = paste0(round(Total), " Euros")), position = position_stack(vjust = 0.5))
pie2019 = pie2019 + coord_polar("y", start=0) + geom_text(aes(label = paste0(round(Total), " Euros")), position = position_stack(vjust = 0.5))
# Add color scale (hex colors)
pie2020 = pie2020 + scale_fill_manual(values=c("#55DDE0", "#33658A"))
pie2019 = pie2019 + scale_fill_manual(values=c("#55DDE0", "#33658A"))
# Remove labels and add title
pie2020 = pie2020 + labs(x = NULL, y = NULL, fill = NULL, title = "Distribucion de la residencia de los turistas en dic 2020")
pie2019 = pie2019 + labs(x = NULL, y = NULL, fill = NULL, title = "Distribucion de la residencia de los turistas en dic 2020")
# Tidy up the theme
pie2020 = pie2020 + theme_classic() + theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, color = "#666666"))
pie2019 = pie2019 + theme_classic() + theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, color = "#666666"))
pie2020
pie2019
# Remove labels and add title
pie2020 = pie2020 + labs(x = NULL, y = NULL, fill = NULL, title = "Distribucion de la residencia de los turistas en dic 2020")
pie2019 = pie2019 + labs(x = NULL, y = NULL, fill = NULL, title = "Distribucion de la residencia de los turistas en dic 2019")
# Tidy up the theme
pie2020 = pie2020 + theme_classic() + theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, color = "#666666"))
pie2019 = pie2019 + theme_classic() + theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, color = "#666666"))
pie2020
pie2019
# Tidy up the theme
pie2020 = pie2020 + theme_classic() + theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, color = "#687687612"))
pie2019 = pie2019 + theme_classic() + theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, color = "#666666"))
pie2020
pie2019
# Tidy up the theme
pie2020 = pie2020 + theme_classic() + theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, color = "#687687"))
pie2019 = pie2019 + theme_classic() + theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, color = "#666666"))
pie2020
pie2019
# Tidy up the theme
pie2020 = pie2020 + theme_classic() + theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, color = "#777777"))
pie2019 = pie2019 + theme_classic() + theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, color = "#666666"))
pie2020
pie2019
# Tidy up the theme
pie2020 = pie2020 + theme_classic() + theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, color = "#455555"))
pie2019 = pie2019 + theme_classic() + theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, color = "#666666"))
pie2020
pie2019
grafico + geom_col() + aes(fill = CCAA) + labs(title = "Gasto Turístico por CCAA", y = "Gasto Total") + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
plot_grid(pie2020, pie2019, labels = "AUTO")
library(cowplot)
plot_grid(pie2020, pie2019, labels = "AUTO")
es_a <- establecimientos_abiertos %>%
dplyr::filter(
CCAA =='Total Nacional'
& Establecimientos == 'Número de plazas estimadas')
ggplot(es_a,aes(Periodo,Total,color=Operación))+geom_line(size=0.75) +
labs(title = "Evolucion de pernoctaciones por sector", x = "Año", y = "Gasto Total")+
theme_minimal()
gastos_turistasDic2020 <- gastos_turistas %>% filter(CCAA != "Total" & Periodo == '2020-12-01' &
Tipo_Dato == 'Dato base' & Gastos == 'Gasto total')
print(gastos_turistasDic2020$Total)
ggplot(es_a,aes(Periodo,Total,color=Operación))+geom_line(size=0.9) +
labs(title = "Evolucion de pernoctaciones por sector", x = "Año", y = "Gasto Total")+
theme_minimal()
gastos_turistasDic2020 <- gastos_turistas %>% filter(CCAA != "Total" & Periodo == '2020-12-01' &
Tipo_Dato == 'Dato base' & Gastos == 'Gasto total')
library(plotly)
ggplotly(ggplot(es_a,aes(Periodo,Total,color=Operación))+geom_line(size=0.9) +
labs(title = "Evolucion de pernoctaciones por sector", x = "Año", y = "Gasto Total")+
theme_minimal())
plot_grid(ggplotly(pie2020), ggplotly(pie2019), labels = "AUTO")
ggplotly(pie2020)
fig <- plot_ly(pernoctaciones, labels = ~Residencia, values = ~Total, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', Total, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig <- fig %>% layout(title = 'United States Personal Expenditures by Categories in 1960',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
fig <- plot_ly(pernoctacionesDic2020, labels = ~Residencia, values = ~Total, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', Total, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig <- fig %>% layout(title = 'United States Personal Expenditures by Categories in 1960',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
fig <- plot_ly()
fig <- fig %>% add_pie(data = pernoctacionesDic2020, labels = ~Residencia, values = ~Total, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', Total, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig <- fig %>% layout(title = 'United States Personal Expenditures by Categories in 1960',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
fig <- fig %>% add_pie(data = pernoctacionesDic2020, labels = ~Residencia, values = ~Total, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', Total, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig <- fig %>% layout(title = 'United States Personal Expenditures by Categories in 1960',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
plot_grid(ggplotly(pie2020), ggplotly(pie2019), labels = "AUTO")
fig
fig <- plot_ly()
fig <- fig %>% add_pie(data = pernoctacionesDic2020, labels = ~Residencia, values = ~Total, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', Total, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig <- fig %>% add_pie(data = pernoctacionesDic2020, labels = ~Residencia, values = ~Total, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', Total, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig <- fig %>% layout(title = "Pie Charts with Subplots", showlegend = F,
grid=list(rows=2, columns=2),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
fig <- fig %>% layout(title = "Pie Charts with Subplots", showlegend = F,
grid=list(columns=2),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
fig <- plot_ly()
fig <- plotly(data = pernoctacionesDic2020, labels = ~Residencia, values = ~Total, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', Total, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig1 <- plot_ly(data = pernoctacionesDic2020, labels = ~Residencia, values = ~Total, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', Total, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig <- plot_ly(data = pernoctacionesDic2020, labels = ~Residencia, values = ~Total, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', Total, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig1 <- plot_ly(data = pernoctacionesDic2020, labels = ~Residencia, values = ~Total, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', Total, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig <- fig %>% layout(title = 'United States Personal Expenditures by Categories in 1960',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
plot_grid(fig, fig1, labels = "AUTO")
fig <- plot_ly()
fig <- fig %>% add_pie(data = pernoctacionesDic2020, labels = ~Residencia, values = ~Total, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', Total, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig1 <- fig %>% add_pie(data = pernoctacionesDic2020, labels = ~Residencia, values = ~Total, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', Total, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig <- fig %>% layout(title = "Pie Charts with Subplots", showlegend = F,
grid=list(rows=1, columns=2),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
plot_grid(fig, fig1, labels = "AUTO")
fig
fig <- fig %>% add_pie(data = pernoctacionesDic2020, labels = ~Residencia, values = ~Total, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', Total, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig1 <- fig %>% add_pie(data = pernoctacionesDic2019, labels = ~Residencia, values = ~Total, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', Total, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig <- fig %>% layout(title = "Pie Charts with Subplots", showlegend = F,
grid=list(rows=1, columns=2),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
fig <- plot_ly()
fig <- fig %>% add_pie(data = pernoctacionesDic2020, labels = ~Residencia, values = ~Total, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
domain = list(row = 0, column = 0),
text = ~paste('$', Total, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig1 <- fig %>% add_pie(data = pernoctacionesDic2019, labels = ~Residencia, values = ~Total, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
domain = list(row = 0, column = 1),
text = ~paste('$', Total, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig <- fig %>% layout(title = "Pie Charts with Subplots", showlegend = F,
grid=list(rows=1, columns=2),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
fig1 <- plot_ly(data = pernoctacionesDic2019, labels = ~Residencia, values = ~Total, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
domain = list(row = 0, column = 1),
text = ~paste('$', Total, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig
fig1 <- plot_ly(data = pernoctacionesDic2020, labels = ~Residencia, values = ~Total, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
domain = list(row = 0, column = 1),
text = ~paste('$', Total, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig
fig1 <- plot_ly(data = pernoctacionesDic2019, labels = ~Residencia, values = ~Total, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
domain = list(row = 0, column = 1),
text = ~paste('$', Total, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig
fig1 <- plot_ly(data = pernoctacionesDic2020, labels = ~Residencia, values = ~Total, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
domain = list(row = 0, column = 1),
text = ~paste('$', Total, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig
fig1 <- plot_ly(data = pernoctacionesDic2019, labels = ~Residencia, values = ~Total, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
domain = list(row = 0, column = 1),
text = ~paste('$', Total, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig
fig1
fig
fig <- plot_ly()
fig <- fig %>% add_pie(data = pernoctacionesDic2020, labels = ~Residencia, values = ~Total, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
domain = list(row = 0, column = 0),
text = ~paste('$', Total, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig <- fig %>% add_pie(data = pernoctacionesDic2019, labels = ~Residencia, values = ~Total, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
domain = list(row = 0, column = 1),
text = ~paste('$', Total, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig <- fig %>% layout(title = "Pie Charts with Subplots", showlegend = F,
grid=list(rows=0, columns=2),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
fig <- fig %>% add_pie(data = pernoctacionesDic2019, labels = ~Residencia, values = ~Total, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
domain = list(row = 0, column = 1),
text = ~paste('$', Total, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = TRUE)
fig <- fig %>% layout(title = "Pie Charts with Subplots", showlegend = F,
grid=list(rows=0, columns=2),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig <- fig %>% layout(title = "Pie Charts with Subplots", showlegend = T,
grid=list(rows=0, columns=2),
xaxis = list(showgrid = T, zeroline = T, showticklabels = T),
yaxis = list(showgrid = T, zeroline = T, showticklabels = T))
fig
View(establecimientos_abiertos)
View(pernoctaciones)
View(pernoctaciones)
View(gastos_turistas)
fig <- plot_ly()
fig <- fig %>% add_pie(data = pernoctacionesDic2019, labels = ~Residencia, values = ~Total,
name = "Cut", domain = list(row = 0, column = 0))
fig <- fig %>% add_pie(data = pernoctacionesDic2020, labels = ~Residencia, values = ~Total,
name = "Color", domain = list(row = 0, column = 1))
fig <- fig %>% layout(title = "Pie Charts with Subplots", showlegend = F,
grid=list(rows=2, columns=2),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
fig <- plot_ly()
fig <- fig %>% add_pie(data = pernoctacionesDic2019, labels = ~Residencia, values = ~Total,
name = "Cut", domain = list(row = 0, column = 0))
fig <- fig %>% add_pie(data = pernoctacionesDic2020, labels = ~Residencia, values = ~Total,
name = "Color", domain = list(row = 0, column = 1))
fig <- fig %>% layout(title = "Pie Charts with Subplots", showlegend = T,
grid=list(rows=2, columns=2),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
fig <- plot_ly()
fig <- fig %>% add_pie(data = pernoctacionesDic2019, labels = ~Residencia, values = ~Total,
name = "Cut", domain = list(row = 0, column = 0))
fig <- fig %>% add_pie(data = pernoctacionesDic2020, labels = ~Residencia, values = ~Total,
name = "Color", domain = list(row = 0, column = 1))
fig <- fig %>% layout(title = "Distribucion de la residencia de los turistas en 2019 y 2020", showlegend = T,
grid=list(rows=2, columns=2),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
